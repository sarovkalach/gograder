version: '3.1'

services:
  # App Service
  # app:
  #   # Configuration for building the docker image for the service
  #   build:
  #     context: . # Use an image built from the specified dockerfile in the current directory.
  #     dockerfile: Dockerfile
  #   ports:
  #     - "8080:8080" # Forward the exposed port 8080 on the container to port 8080 on the host machine
  #   restart: unless-stopped
  #   depends_on: 
  #     - redis # This service depends on redis. Start that first.
  #   environment: # Pass environment variables to the service
  #     REDIS_URL: redis:6379    
  #   networks: # Networks to join (Services on the same network can communicate with each other using their name)
  #     - backend
  mysql:
    image: mysql:8.0.3
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=grader
      - MYSQL_USER=kalach
      - MYSQL_PASSWORD=1234
    ports:
      - '3306:3306'
    volumes:
      - './db/tasks.sql:/docker-entrypoint-initdb.d/tasks.sql'
      - './db/users.sql:/docker-entrypoint-initdb.d/users.sql'


  adminer:
    image: adminer
    restart: always
    ports:
      - 8090:8080


  rabbitmq:
    image: 'rabbitmq'
    ports:
      - '5672:5672'

  minio:
    image: minio/minio:latest
    hostname: minio1
    volumes:
      - ./minio-data:/export
    ports:
      - '9000:9000'
    environment:
      MINIO_ACCESS_KEY: 9013HBZHIRHONH8ZIWL6
      MINIO_SECRET_KEY: gKIVgZaWAiuXbugPv9+dT4MKWsKlqxCyXFI+9ys+
      # MINIO_DEFAULT_BUCKETS: grader,test
    command: server /export
    
  createbuckets:
    image: minio/mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      until (/usr/bin/mc config host add myminio http://minio:9000 9013HBZHIRHONH8ZIWL6 gKIVgZaWAiuXbugPv9+dT4MKWsKlqxCyXFI+9ys+) do echo '...waiting...' && sleep 1; done;
      /usr/bin/mc mb myminio/grader;
      /usr/bin/mc policy download myminio/grader;
      exit 0;
      "

  redis:
    image: 'bitnami/redis:5.0'
    environment:
      # ALLOW_EMPTY_PASSWORD is recommended only for development.
      - ALLOW_EMPTY_PASSWORD=yes
      - REDIS_DISABLE_COMMANDS=FLUSHDB,FLUSHALL
    ports:
      - '6379:6379'
    volumes:
      - 'redis_data:/bitnami/redis/data'

volumes:
  redis_data:
    driver: local

